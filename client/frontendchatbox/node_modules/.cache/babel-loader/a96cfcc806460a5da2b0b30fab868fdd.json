{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\brott\\\\developement\\\\halfsies\\\\client\\\\frontendchatbox\\\\src\\\\components\\\\PrivateRoute.js\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PrivateRoute(_ref) {\n  let {\n    component: Component,\n    authenticated,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => authenticated === true ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 7\n  }, this);\n}\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["C:/Users/brott/developement/halfsies/client/frontendchatbox/src/components/PrivateRoute.js"],"names":["BrowserRouter","Router","Route","Redirect","Switch","PrivateRoute","component","Component","authenticated","rest","props","pathname","state","from","location"],"mappings":";AAAA,SAAQA,aAAa,IAAIC,MAAzB,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAgDC,MAAhD,QAA6D,kBAA7D;;;AAEA,SAASC,YAAT,OAAwE;AAAA,MAAlD;AAAEC,IAAAA,SAAS,EAAEC,SAAb;AAAwBC,IAAAA,aAAxB;AAAuC,OAAGC;AAA1C,GAAkD;AACpE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAGC,KAAD,IAAWF,aAAa,KAAK,IAAlB,gBACf,QAAC,SAAD,OAAeE;AAAf;AAAA;AAAA;AAAA;AAAA,YADe,gBAEf,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAA7B;AAAd;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATMT,Y;AAWP,eAAeA,YAAf","sourcesContent":["import {BrowserRouter as Router,Route, Redirect,Switch} from 'react-router-dom';\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={(props) => authenticated === true\n          ? <Component {...props} />\n          : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n      />\n    )\n  }\n\n  export default PrivateRoute;"]},"metadata":{},"sourceType":"module"}